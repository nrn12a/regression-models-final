# Nathan Neill, UNI: nn2401
# GLM Homework 4
rm(list=ls())
install.packages("Sleuth3")
library(Sleuth3)


# problem 1
# group by individual, each individual has 2 of their own trials? 

# Problem 2
moths <- data("case2102")
summary(moths)
attach(case2102)
summary(case2102)
library(boot)

# create proportion removed
case2102$prop <- case2102$Removed/case2102$Placed
# create logit
case2102$logitprop <- logit(case2102$prop)
summary(case2102)

# part a
lightmoths <- subset(case2102, Morph == "light")
lightmoths

plot(lightmoths$Distance, lightmoths$logitprop,
     xlab="Distance from Liverpool in km", ylab="Logit of the Proportion
     of Light Moths Removed")

library(plotly)

p <- plot_ly(lightmoths, x = ~Distance, y = ~logitprop,
             type='scatter', mode='lines') %>% layout(title="Problem 2a Plot",
               xaxis=list(title = "Distance from Liverpool in km"),
                                                      yaxis=list(title="Logit of the Proportion
     of Light Moths Removed"))

p

# part b

mothreg <- glm(prop ~ Distance, family=binomial,
    data=case2102)

summary(mothreg)

# do white removed over all removed, not placed
# .280, -.018
# p= .839
moth2 <- glm(cbind(Removed, Placed) ~ Distance, family=binomial,
             data=case2102)

summary(moth2)

# c, find deviance goodness of fit statistic, CIs
pchisq(deviance(moth2),
       df.residual(moth2), lower.tail=F)


detach(case2102)

# problem 3
# part a
# .4269
# .095, .763
group3 <- c(1,2)
colds <- c(335, 302)
size3 <- c(411, 407)
indicator3 <- c(1,0)
threeset <- as.data.frame(cbind(group3, colds, size3, indicator3))

coldreg <- glm(cbind(colds, size3-colds) ~ indicator3, data=threeset,
               family = binomial)
summary(coldreg)


# problem 4
aflo = ex2116

aflomodel <- glm(cbind(Tumor, (Total - Tumor)) ~ Dose, data=aflo,
                 family = quasibinomial())

summary(aflomodel)

plot(aflomodel)

what <- plot(fitted(aflomodel),cooks.distance(aflomodel), xlab="Fitted Damage Incidents",
     ylab="Cooks distance")

what
plot(fitted(aflomodel),hatvalues(aflomodel), xlab="Fitted Damage Incidents",
     ylab="Leverage")
plot(fitted(ships.glm),dffits(ships.glm), xlab="Fitted Damage Incidents",
     ylab="DFFITS")

# only 18 as influential point
# use F test for quasi, p=6.48^-5

# part d
anova(aflomodel, test="F")

# part e, .0604

# f confidence interval
quad <- function(a,b,d) {
  disc <- sqrt(b^2 -4*a*d)
  c((-b-disc)/(2*a), (-b+disc)/(2*a))
}

fieller <- function(coefest, varest, conflevel=0.95) {
  alpha <- (1-conflevel) / 2
  critval <- qnorm(alpha, lower.tail=F)
  a <- coefest[2]^2 - critval^2*varest[2,2]
  b <- -(2*varest[1,2]*critval^2-2*prod(coefest))
  d <- coefest[1]^2-critval^2*varest[1,1]
  quad(a,b,d)
}

fieller(coef(aflomodel), vcov(aflomodel))

# 4g
deviance(aflomodel)
pchisq(deviance(aflomodel),
       df.residual(aflomodel), lower.tail=F)

# Problem 5
# load data
atom = ex2220

atom$Rate = atom$Deaths / atom$AtRisk

firstfive = glm(Deaths ~ YearsAfter + Exposure + I(Exposure^2) + offset(log(AtRisk)),
            data=atom, family=poisson)
summary(firstfive)
anova(firstfive, test="LRT")
firstfive$deviance
mean(atom$Deaths)

# another way to test
install.packages("qcc")
library(qcc)

qcc.overdispersion.test(atom$Deaths, type = "poisson")
# gives same result
ggplot(atom, x=fitted(firstfive), y=resid(firstfive))

# part b
secondfivea = glm(Deaths ~ YearsAfter + Exposure + offset(log(AtRisk)),
                 data=atom, family=poisson)
levels(atom$YearsAfter) = as.character(c(3.5, 9.5, 13.5, 17.5, 21.5, 25.5, 29.5))
summary(secondfivea)
atom$YearsAfter = as.numeric(as.character(atom$YearsAfter))
secondfiveb = glm(Deaths ~ log(YearsAfter) + Exposure + offset(log(AtRisk)),
                  data=atom, family=poisson)

summary(secondfiveb)

# compare the two
anova(secondfivea)
anova(firstfive)
anova(secondfiveb)

secondfivea$deviance
secondfiveb$deviance


# part c
fivec = glm(Deaths ~ YearsAfter + Exposure + I(log(YearsAfter)*Exposure)
            + offset(log(AtRisk)),
            data=atom, family=poisson)
summary(fivec)

# part d
secondfiveb$coefficients
confint(secondfiveb)


# problem 6
library(MASS)
install.packages("pscl")
library(pscl)
water = ex2224
water$Mode <- as.factor(water$Mode)
water$Valve <- as.factor(water$Valve)
water$Operator <- as.factor(water$Operator)
water$System <- as.factor(water$System)
water$Size <- as.factor(water$Size)


waterpois <- glm(Failures ~ Mode + Size + Valve + Operator + System + 
                   offset(log(Time)), data=water, family=negative.binomial())

waterpois <- glm(Failures ~ Mode*Size*Valve*Operator*System*offset(log(Time)), data=water, family=poisson)
summary(waterpois)

water.nb <- glm.nb(Failures ~ Mode + Size + Valve + Operator + System,
                   data = water, offset(log(Time)))
water.nb$theta
water.nb$SE
summary(water.nb)


# zero inflated model

zero1 <- zeroinfl(Failures ~ Mode + Size + Valve + Operator + System | 1,
                  offset=log(Time), data = water, dist = "negbin")
summary(zero1)

vuong(zero1, water.nb)

# zero inflated isn't significantly better than regular negative binomial

# AIC
stepAIC(water.nb, direction = "both")

